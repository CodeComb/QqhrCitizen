@model QqhrCitizen.Models.ViewModel.vUserEdit
@using QqhrCitizen.Models
@{
    ViewBag.Title = "修改用户信息 - 齐齐哈尔市民学习网";
    User user = ViewBag.user as User;
}

<script src="~/Scripts/jquery.datetimepicker.js"></script>
<script>
    
    function UserEditCheck() {
        if (!CheckPhone()) return false;
        if (!CheckEmail()) return false;
        if (!CheckBirthday()) return false;
    }

    function CheckPhone() {
        if ($("#Phone").val() != "") {
            if ($("#Phone").val().length > 14 || $("#Phone").val().length < 6) {
                CastMsg("电话格式不正确");
                return false;
            }
        }
        return true;
    }
    function CheckEmail() {
        if ($("#Email").val() != "") {
            var myreg = /^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/;
            if (!myreg.test($("#Email").val())) {
                CastMsg("邮箱格式输入错误！");
                return false;
            }
        }
        return true;
    }
    function CheckBirthday() {
        if ($("#Birthday").val() != "") {
            var str = $("#Birthday").val()
            var year = Convert.ToInt32(str.Substring(0, 3));
            var month = Convert.ToInt32(str.Substring(5, 2));
            var bzh = "";
            if (year / 4 == 0) {
                if (!Regex.IsMatch(str, "^[1-2][0-9][0-9][0-9][-](([0][2]))[-](([2][9])|([3][0-1]))$")) {
                    bzh = "(^[1-2][0-9][0-9][0-9][-](([0][1,3,5,7,8])|([1][0,2]))[-](([0][0-9])|([1-2][0-9])|([3][0-1]))$)|(^[1-2][0-9][0-9][0-9][-](([0][4,6,9])|([1][1]))[-](([0][0-9])|([1-2][0-9])|([3][0]))$)";
                }
                else
                    CastMsg("生日输入错误");
                return false;
                if (Regex.IsMatch(str, bzh)) {
                    return true;
                }
                else
                    CastMsg("生日输入错误");
                return false;
            }
            if (year / 4 != 0) {
                if (!Regex.IsMatch(str, "^[1-2][0-9][0-9][0-9][-](([0][2]))[-]([3][0-1])$")) {
                    bzh = "(^[1-2][0-9][0-9][0-9][-](([0][1,3,5,7,8])|([1][0,2]))[-](([0][0-9])|([1-2][0-9])|([3][0-1]))$)|(^[1-2][0-9][0-9][0-9][-](([0][4,6,9])|([1][1]))[-](([0][0-9])|([1-2][0-9])|([3][0]))$)";
                }
                else
                    CastMsg("生日输入错误");
                return false;
                if (Regex.IsMatch(str, bzh)) {
                    return true;
                }
                else
                    CastMsg("生日输入错误");
                return false;
            }
        }
    }

    $(function () {
        $("#Address").html("@user.Address");
        $('.datetime').datetimepicker();
    });


</script>
@using (Html.BeginForm("Edit", "User", FormMethod.Post, new
                    {
                        onsubmit = "return UserEditCheck();",
                        enctype = "multipart/form-data"
                    }))
{
    @Html.AntiForgerySID()
    @Html.HiddenFor(model => model.ID, new { @value = user.ID })
    <div class="container wrap-cont">
        <div class="narrow block">
            <h2>修改用户信息</h2>
            <table class="detail-table">
                <tr>
                    <td class="row-title">用户名</td>
                    <td>
                        @Html.TextBoxFor(model => model.Username, new { @Value = user.Username, @class = "textbox w-3" })
                    </td>
                </tr>
                <tr>
                    <td class="row-title">头像</td>
                    <td><input type="file" class="textbox w-2" name="file" />(不修改请留空)</td>
                </tr>
                <tr>
                    <td class="row-title">性别</td>
                    <td>@Html.DropDownListFor(model => model.Sex, ViewBag.Sex as IEnumerable<SelectListItem>, new { @class = "textbox w-3" })
                </tr>
                <tr>
                    <td class="row-title">住址</td>
                    <td>@Html.TextAreaFor(model => model.Address, new { @class = "textbox w-3", rows = "10", cols = "20" })</td>
                </tr>
                <tr>
                    <td class="row-title">电话</td>
                    <td>@Html.TextBoxFor(model => model.Phone, new { @Value = user.Phone, @class = "textbox w-3" })</td>
                </tr>
                <tr>
                    <td class="row-title">生日</td>
                    <td>
                        @Html.TextBoxFor(model => model.Birthday, new { @Value = user.Birthday, @class = "textbox w-3 datetime" })<br />
                    </td>
                </tr>
                <tr>
                    <td class="row-title">邮箱</td>
                    <td>@Html.TextBoxFor(model => model.Email, new { @Value = user.Email, @class = "textbox w-3" })</td>
                </tr>
                <tr>
                    <td class="row-title">真实姓名</td>
                    <td>@Html.TextBoxFor(model => model.Realname, new { @Value = user.Realname, @class = "textbox w-3" })</td>
                </tr>
            </table>
            <div align="center"><input type="submit" value="保存" class="button blue" /><input type="reset" value="重置" class="button blue " /></div>
            @Html.ValidationSummary(true)
        </div>
    </div>
}





